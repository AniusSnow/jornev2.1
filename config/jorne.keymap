/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

/ {
    macros {
        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL &kp Z>, <&macro_press>;

            label = "NEW_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  GUI |   ~  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [   | GUI/] |
            //        | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |CTRL/'|
            //        | LALT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
            //                           | RSE | SPC | LWR |   | LWR | BKSP | RSE |

            bindings = <
&kp LWIN  &kp ESC         &kp Q  &kp W  &kp E             &kp R           &kp T        &kp Y          &kp U          &kp I        &kp O      &kp P       &kp DEL        &mt RWIN RBKT
          &kp TAB         &kp A  &kp S  &kp D             &kp F           &kp G        &kp H          &kp J          &kp K        &kp L      &kp SEMI    &mt RCTRL SQT
          &kp LEFT_SHIFT  &kp Z  &kp X  &kp C             &kp V           &kp B        &kp B          &kp N          &kp M        &kp COMMA  &kp PERIOD  &kp SLASH
                                        &kp LEFT_CONTROL  &lt 2 LEFT_ALT  &kp SPACE    &lt LWR SPACE  &kp BACKSPACE  &lt RSE DEL
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |     |  _  |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | F11 | F12 |
            //       |  +  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  -  |
            //       |  =  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp K_UNDO      &kp N1        &kp N2          &kp N3  &kp NUMBER_4  &kp NUMBER_6    &kp N6           &kp N7          &kp N8           &kp N9    &kp N0    &kp F11          &mt RGUI F12
        &mt LCTRL PLUS  &kp LEFT_WIN  &kp LEFT_SHIFT  &kp S   &kp DLLR      &kp PRCNT       &kp CARET        &kp UP_ARROW    &kp STAR         &kp LPAR  &kp RPAR  &mt RCTRL MINUS
        &kp K_UNDO      &kp N1        &kp N2          &kp N3  &kp N4        &kp N5          &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp N9    &kp N0    &trans
                                                      &trans  &trans        &trans          &kp RIGHT_SHIFT  &trans          &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |     | NMLK |  /  |  7  |  8  |  9  |  -  |   | VOLU| HOME| PRSC| PGUP| SCLK| CLCK|     |
            //       | CTRL |  *  |  4  |  5  |  6  |  +  |   | MUT | LEFT|  UP | RGHT| INS | APP |
            //       |      |  0  |  1  |  2  |  3  |  .  |   | VOLD| END | DOWN| PGDN| PAUS|     |
            //                          |     |     | ADJ |   | ADJ |     |     |

            bindings = <
&trans  &kp DELETE       &kp LEFT_BRACKET   &kp KP_N7       &kp KP_N8         &kp KP_N9  &kp C_VOLUME_UP    &kp C_VOL_UP  &kp HOME  &kp PSCRN  &kp PG_UP  &kp SLCK         &kp CAPS         &trans
        &mt LCTRL EQUAL  &kp LEFT_WIN       &kp LEFT_SHIFT  &kp S             &kp KP_N6  &kp KP_PLUS        &kp C_MUTE    &kp LEFT  &kp UP     &kp RIGHT  &kp INS          &mt RCTRL K_APP
        &trans           &kp RIGHT_BRACKET  &kp KP_N1       &kp KP_N2         &kp KP_N3  &kp C_VOL_DN       &kp C_VOL_DN  &kp END   &kp DOWN   &kp PG_DN  &kp PAUSE_BREAK  &trans
                                                            &kp LEFT_CONTROL  &trans     &trans             &lt ADJ ESC   &trans    &trans
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
            //       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
            //       |      |     |     |     |     |     |   |     |     |     |     |     |      |
            //                          |     |     |     |   |     |     |     |

            bindings = <
&sys_reset  &bootloader  &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &bootloader  &sys_reset
            &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
            &none        &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &none
                                                     &trans        &none         &trans          &trans        &none         &trans
            >;
        };
    };
};
